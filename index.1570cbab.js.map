{"mappings":"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","sources":["src/js/scrolTo.js","src/js/sendMail.js","src/js/animation.js","src/js/swiper.js","src/js/readMore.js"],"sourcesContent":["function scrollToSection(event) {\n  event.preventDefault();\n  const targetHref = \"index.html\";\n  const targetElement = document.querySelector(targetHref);\n\n  if (targetElement) {\n      window.scrollTo({\n          top: targetElement.offsetTop,\n          behavior: 'smooth'\n      });\n  }\n}\n\n  const journeyBtn = document.querySelector(\".journey-btn\");\n\n  journeyBtn.addEventListener(\"click\", scrollToSection);\n\n  const links = document.querySelectorAll('.header-link');\n\n  links.forEach(link => {\n        link.addEventListener('click', scrollToSection);\n    });\n\n\n","var form = document.getElementById(\"my-form\");\n\nasync function handleSubmit(event) {\n  event.preventDefault();\n  var status = document.getElementById(\"my-form-status\");\n  var hasEmptyField = false;\n\n  for (var i = 0; i < form.elements.length; i++) {\n    var field = form.elements[i];\n\n    if (field.value.trim() === '') {\n      field.setAttribute('required', 'required');\n      hasEmptyField = true;\n    } else {\n      field.removeAttribute('required');\n    }\n  }\n\n  if (hasEmptyField) {\n    status.innerHTML = 'Oops! There was a problem submitting your form. Please fill in all required fields.';\n    console.log(\"There are empty fields\");\n  }\n\n  var data = new FormData(event.target);\n  try {\n    var response = await fetch(event.target.action, {\n      method: form.method,\n      body: data,\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n\n    if (response.ok) {\n      status.innerHTML = \"Thank you for your message! We will contact you soon.\";\n      form.reset();\n    } else {\n      var responseData = await response.json();\n      if (responseData.hasOwnProperty('errors')) {\n        status.innerHTML = responseData.errors.map(error => error.message).join(\", \");\n        console.log(responseData.errors);\n      } else {\n        status.innerHTML = \"Oops! There was a problem submitting your form\";\n      }\n    }\n  } catch (error) {\n    console.log(error);\n    status.innerHTML = \"Oops! There was a problem submitting your form\";\n  }\n}\n\nform.addEventListener(\"submit\", handleSubmit);\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  var textarea = document.getElementById(\"message\");\n\n  textarea.addEventListener(\"click\", function() {\n    this.setSelectionRange(0, 0);\n  });\n});\n","const journey = document.querySelectorAll(\".journey-container\");\n\n const journeyObserver = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const focusElement = entry.target;\n      focusElement.classList.add('animate__animated', 'animate__slideInLeft', 'animate__medium');\n    }\n  });\n});\n\njourney.forEach((focusElement) => {\n  journeyObserver.observe(focusElement);\n});\n\nconst fuel = document.querySelectorAll(\".fuel-container\");\n\nconst fuelObserver = new IntersectionObserver((entries) => {\n entries.forEach((entry) => {\n   if (entry.isIntersecting) {\n     const focusElement = entry.target;\n     focusElement.classList.add('animate__animated', 'animate__slideInLeft', 'animate__medium');\n   }\n });\n});\n\nfuel.forEach((focusElement) => {\n  fuelObserver.observe(focusElement);\n});\n\nconst resourses = document.querySelectorAll(\".resourses-container\");\n\nconst resoursesObserver = new IntersectionObserver((entries) => {\n entries.forEach((entry) => {\n   if (entry.isIntersecting) {\n     const focusElement = entry.target;\n     focusElement.classList.add('animate__animated', 'animate__backInRight', 'animate__medium');\n   }\n });\n});\n\nresourses.forEach((focusElement) => {\n  resoursesObserver.observe(focusElement);\n});\n \n\n const ourFocus = document.querySelectorAll(\".our-focus-section-wrap\");\n\n const ourFocusObserver = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const focusElement = entry.target;\n      focusElement.classList.add('animate__animated', 'animate__fadeIn', 'animate__medium');\n    }\n  });\n});\n\nourFocus.forEach((focusElement) => {\n  ourFocusObserver.observe(focusElement);\n});\n \n const serviceCards = document.querySelectorAll(\".service-card\");\n\nconst intersectionObserver = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const card = entry.target;\n      card.classList.add('animate__animated', 'animate__fadeInRight', 'animate__medium');\n    }\n  });\n});\n\nserviceCards.forEach((card) => {\n  intersectionObserver.observe(card);\n});\n\n\n","const swiper = new Swiper(\".swiper\", {\n    direction: \"horizontal\",\n    spaceBetween: 37,\n    slidesPerView: 3.6,\n    freeMode: true,\n    loop: true,\n    watchSlidesProgress: true,\n    navigation: {\n      nextEl: \".button-next\",\n      prevEl: \".button-prev\"\n    }\n  });","const serviseCardTxt = document.querySelectorAll(\".card-text\");\nconst ReadMore = document.querySelectorAll(\".readMore\");\n\nReadMore.forEach((button, index) => {\n  let isOpen = false;\n\n  button.addEventListener(\"click\", () => {\n    if (isOpen) {\n      serviseCardTxt[index].style.height = \"113px\";\n      button.textContent = \"Read more\";\n    } else {\n      serviseCardTxt[index].style.height = \"auto\";\n      button.textContent = \"Read less\";\n    }\n\n    isOpen = !isOpen;\n  })\n});\n\n"],"names":["$0f7a015f0aa69875$var$scrollToSection","event","preventDefault","targetElement","document","querySelector","window","scrollTo","top","offsetTop","behavior","addEventListener","querySelectorAll","forEach","link","$0198d8318a52310f$var$form","getElementById","async","status","hasEmptyField","i","elements","length","field","value","trim","setAttribute","removeAttribute","innerHTML","console","log","data","FormData","target","response","fetch","action","method","body","headers","Accept","ok","reset","responseData","json","hasOwnProperty","errors","map","error","message","join","this","setSelectionRange","$102a1c8203678332$var$journey","$102a1c8203678332$var$journeyObserver","IntersectionObserver","entries","entry","isIntersecting","classList","add","focusElement","observe","$102a1c8203678332$var$fuel","$102a1c8203678332$var$fuelObserver","$102a1c8203678332$var$resourses","$102a1c8203678332$var$resoursesObserver","$102a1c8203678332$var$ourFocus","$102a1c8203678332$var$ourFocusObserver","$102a1c8203678332$var$serviceCards","$102a1c8203678332$var$intersectionObserver","card","Swiper","direction","spaceBetween","slidesPerView","freeMode","loop","watchSlidesProgress","navigation","nextEl","prevEl","$db23e68f021d568f$var$serviseCardTxt","button","index","isOpen","style","height","textContent"],"version":3,"file":"index.1570cbab.js.map"}